// This file has been autogenerated from a class added in the UI designer.

using System;
using System.IO;
using System.Collections;
using Foundation;
using AppKit;

namespace InsultGenerator
{
	public partial class PreviousInsultsController : NSViewController
	{
		public bool ShowSaveAsSheet { get; set;} = false;
		private string _generatedInsultsString;
		
		public PreviousInsultsController(IntPtr handle) : base(handle)
		{
		}
		
        public void GetDataFromParent()
        {
            _generatedInsultsString = "";
            for (int i = 0; i < InsultViewController.GeneratedInsults.Count; i++)
            {
                _generatedInsultsString += InsultViewController.GeneratedInsults[i] + "\n\n";
            }
        }

        partial void SaveInsultsButtonClicked(NSButton sender)
        {
            ShowSaveAs(sender);
        }

        partial void ClearInsultsButtonClicked(AppKit.NSButton sender)
        {
            InsultViewController.GeneratedInsults.Clear();
            InsultsTextView.Value = string.Empty;
            NSApplication.SharedApplication.KeyWindow.Close();
        }
        
        [Export("saveDocumentAs:")]
        // ReSharper disable once UnusedParameter.Local
        void ShowSaveAs (NSObject sender)
        {
            NSWindow window = NSApplication.SharedApplication.KeyWindow;
            var dlg = new NSSavePanel ();
            dlg.Title = "Save Text File";
            dlg.AllowedFileTypes = new[] { "txt", "html", "md", "css" };
            dlg.NameFieldStringValue = "insults.txt";

            if (ShowSaveAsSheet) {
                dlg.BeginSheet(window,(result ) =>
                {
                    StreamWriter streamWriter = new StreamWriter(dlg.Filename);
                    streamWriter.Write(_generatedInsultsString);
                    streamWriter.Close();
                });
            } else {
                if (dlg.RunModal () == 1) {
                    StreamWriter streamWriter = new StreamWriter(Convert.ToString(dlg.Url));
                    streamWriter.Write(_generatedInsultsString);
                    streamWriter.Close();
                    // var alert = new NSAlert () {
                    //     AlertStyle = NSAlertStyle.Critical,
                    //     InformativeText = "We need to save the document here...",
                    //     MessageText = "Save Document",
                    // };
                    // alert.RunModal ();
                }
            }
        
        }

        public override void ViewDidLoad()
        {
            base.ViewDidLoad();
            
            GetDataFromParent();

            InsultsTextView.Value = _generatedInsultsString;
        }
	}
}
